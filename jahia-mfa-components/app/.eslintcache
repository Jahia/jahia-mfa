[{"/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/index.js":"1","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/App.jsx":"2","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/MultiStepForm.jsx":"3","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/config.js":"4","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/ActivateMFA.jsx":"5","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/ViewQRCode.jsx":"6","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/DeactivateMFA.jsx":"7","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/LoginForm.jsx":"8","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/graphQL/MFAmanagement.gql.jsx":"9","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/PrepareMFA.jsx":"10","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/MFAmessage.jsx":"11"},{"size":254,"mtime":1608672400209,"results":"12","hashOfConfig":"13"},{"size":897,"mtime":1611007123464,"results":"14","hashOfConfig":"13"},{"size":1521,"mtime":1611005675274,"results":"15","hashOfConfig":"13"},{"size":69,"mtime":1607026476713,"results":"16","hashOfConfig":"13"},{"size":983,"mtime":1611005798970,"results":"17","hashOfConfig":"13"},{"size":2070,"mtime":1611005869735,"results":"18","hashOfConfig":"13"},{"size":1296,"mtime":1611004495326,"results":"19","hashOfConfig":"13"},{"size":1451,"mtime":1611006886986,"results":"20","hashOfConfig":"13"},{"size":1310,"mtime":1610400931525,"results":"21","hashOfConfig":"13"},{"size":1062,"mtime":1611004568655,"results":"22","hashOfConfig":"13"},{"size":362,"mtime":1611005985525,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"vs6o1q",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/index.js",[],["52","53"],"/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/App.jsx",["54"],"/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/MultiStepForm.jsx",[],"/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/config.js",[],"/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/ActivateMFA.jsx",["55"],"import React, {useEffect } from 'react';\n\n\nimport {useMutation } from '@apollo/client';\n\nimport {activateMFAQuery} from '../graphQL/MFAmanagement.gql';\nimport {Button, Typography} from \"@jahia/moonstone\";\n\nconst ActivateMFA = ({ setForm, formData, navigation, headers }) => {\n    const { previous,go} = navigation;\n\n    const [activateMFA] = useMutation(activateMFAQuery, {\n        variables:{\n            activate: 'true',\n            provider: 'jahia-mfa-otp-provider'\n        },\n        context: {\n            headers: headers\n        },\n        onCompleted: data => {\n            if (data && data.mfa && data.mfa.activateMFA) {\n                go('success')\n            }\n        }\n    });\n\nreturn (\n    <div className=\"form\">\n        <Typography>Activate MFA</Typography>\n\n        <div><Button label=\"Activate MFA\" onClick={activateMFA}/></div>\n        <div>\n            <Button label=\"Previous\" onClick={previous}/>\n        </div>\n    </div>\n);\n};\n\nexport default ActivateMFA;\n","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/ViewQRCode.jsx",["56"],"\nimport React from 'react';\nimport {useQuery, useLazyQuery } from '@apollo/client';\n\nimport {\n    verifyTokenQuery,\n    retrieveQRCodeQuery,\n} from '../graphQL/MFAmanagement.gql';\nimport {Button, ImgWrapper, Input, Typography} from \"@jahia/moonstone\";\n\n\nconst ViewQRCode = ({ setForm, formData, navigation }) => {\n    const Buffer = require('buffer').Buffer\n\n    let logo = null;\n    const { go } = navigation;\n    const {token, username, password } = formData;\n    const { previous, next } = navigation;\n    const headers = {   'Authorization': 'Basic ' + Buffer.from(username+\":\"+password).toString(\"base64\"),\n    'Content-Type': 'application/json'\n    }\n\n    const retrieveQRCodeResponse = useQuery(retrieveQRCodeQuery, {\n        variables: {\n            password: password\n        },\n        context: {\n            headers: headers\n        },\n        fetchPolicy: 'no-cache'\n    });\n\n\n    const [verifyToken, verifyTokenResponse  ] = useLazyQuery(verifyTokenQuery, {\n        variables:{\n            password: password,\n            provider: 'jahia-mfa-otp-provider',\n            token: token\n        },\n        context: {\n            headers: headers\n        },\n    });\n\n    if (retrieveQRCodeResponse.loading)\n        return (<div>LOADING</div>);\n\n    if (retrieveQRCodeResponse.data.mfaOTP.retrieveQRCode){\n        logo = \"data:image/jpg;base64,\"+retrieveQRCodeResponse.data.mfaOTP.retrieveQRCode\n    }\n\n    if (verifyTokenResponse.data){\n        if (verifyTokenResponse.data.mfa.verifyToken){\n            go('activateMFA');\n        }\n    }\n\nreturn (\n    <div className=\"form\">\n        <Typography>QR Code</Typography>\n\n        <ImgWrapper id=\"qrimage\"  src={logo} size=\"200\"/>\n        <div>\n            <Input\n                placeholder=\"QR Token\"\n                name=\"token\"\n                onChange={setForm}\n                value={token}\n            />\n            <div><Button label=\"Verify Token\" onClick={verifyToken}/></div>\n            <div><Button label=\"Previous\" onClick={previous}/></div>\n        </div>\n    </div>\n);\n};\n\nexport default ViewQRCode;\n","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/DeactivateMFA.jsx",["57"],"import React, {useEffect } from 'react';\n\nimport {useMutation} from '@apollo/client';\n\nimport {activateMFAQuery} from '../graphQL/MFAmanagement.gql';\nimport {Typography,Button} from \"@jahia/moonstone\";\n\nconst DeactivateMFA = ({ setForm, formData, navigation }) => {\n    const Buffer = require('buffer').Buffer\n    const { go, previous } = navigation;\n    const { username, password } = formData;\n    const headers = {   'Authorization': 'Basic ' + Buffer.from(username+\":\"+password).toString(\"base64\"),\n    'Content-Type': 'application/json'\n    }\n\n    const [deactivateMFA ] = useMutation(activateMFAQuery, {\n        variables:{\n            activate: 'false',\n            provider: 'jahia-mfa-otp-provider'\n        },\n        context: {\n            headers: headers\n        },\n        onCompleted: data => {\n            console.log(data);\n            if (data && data.mfa.activateMFA) {\n                console.log(\"goooo login\");\n                go('login')\n            }\n        }\n    });\n\nreturn (\n    <div className=\"form\">\n        <Typography>Deactivate MFA</Typography>\n        <div><Button label=\"Deactivate MFA\" onClick={deactivateMFA}/></div>\n        <div>\n            <Button label=\"Previous\" onClick={previous}></Button>\n        </div>\n    </div>\n);\n};\n\nexport default DeactivateMFA;\n","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/LoginForm.jsx",["58","59","60"],"import React, {useEffect} from \"react\";\n\nimport {useLazyQuery} from \"@apollo/client\";\nimport {verifyMFAStatusQuery} from \"../graphQL/MFAmanagement.gql\";\nimport {Typography, Input,Button,Separator} from '@jahia/moonstone';\n\nconst LoginForm = ({ setForm, formData, navigation, headers}) => {\n  const { username, password } = formData;\n  const { go } = navigation;\n\n  const  [verifyMFAStatus, { data, loading, error }  ] = useLazyQuery(verifyMFAStatusQuery, {\n        variables: {\n            username: username,\n            sitekey: 'digitall'\n        },\n        context: {\n            headers: headers\n        },\n        fetchPolicy: 'no-cache'\n    });\n\n\n    useEffect(() => {\n        console.log(data);\n        if (data && data.mfaOTP.verifyMFAStatus && !loading) {\n            go('deactivateMFA')\n        }\n        if (data && !data.mfaOTP.verifyMFAStatus && !loading) {\n            go('prepareMFA')\n        }\n    }, [data, loading]);\n\n\n    if (loading) return <p>Loading ...</p>;\n\n    return (\n\n    <div className=\"form\">\n        <Typography>Login Form</Typography>\n        <div>\n      <Input placeholder=\"Username\"\n        name=\"username\"\n        value={username}\n        onChange={setForm}\n      /></div>\n\n       <div> <Input placeholder=\"Password\"\n        name=\"password\"\n        value={password}\n        onChange={setForm}\n      /></div>\n\n        <Button label={'Login'} onClick={verifyMFAStatus}/>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/graphQL/MFAmanagement.gql.jsx",[],"/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/PrepareMFA.jsx",["61"],"import React, {useEffect } from 'react';\n\nimport {useMutation} from '@apollo/client';\n\nimport {prepareMFAQuery} from '../graphQL/MFAmanagement.gql';\nimport {Button, Typography} from \"@jahia/moonstone\";\n\nconst PrepareMFA = ({formData, navigation, headers }) => {\n    const {previous,  go } = navigation;\n    const {password } = formData;\n\n    const [prepareMFA ] = useMutation(prepareMFAQuery, {\n        variables:{\n            password: password,\n            provider: 'jahia-mfa-otp-provider'\n        },\n        context: {\n            headers: headers\n        },\n        onCompleted: data => {\n            if (data && data.mfa && data.mfa.prepareMFA ) {\n                console.log(\"goooo MFA QR CODE\");\n                go('viewQRCode')\n            }\n        }\n    });\n\nreturn (\n    <div className=\"form\">\n        <Typography>Prepare MFA</Typography>\n        <div><Button label=\"Prepare MFA\" onClick={prepareMFA}/></div>\n        <div>\n            <Button label=\"Previous\" onClick={previous}></Button>\n        </div>\n    </div>\n);\n};\n\nexport default PrepareMFA;\n","/Users/faissah/jahia/sources/modules/jahia-mfa/jahia-mfa-components/app/src/components/MFAmessage.jsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":13,"column":9,"nodeType":"68","messageId":"69","endLine":13,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":1,"column":16,"nodeType":"68","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"73","line":18,"column":23,"nodeType":"68","messageId":"72","endLine":18,"endColumn":27},{"ruleId":"70","severity":1,"message":"71","line":1,"column":16,"nodeType":"68","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":5,"column":34,"nodeType":"68","messageId":"72","endLine":5,"endColumn":43},{"ruleId":"70","severity":1,"message":"75","line":11,"column":45,"nodeType":"68","messageId":"72","endLine":11,"endColumn":50},{"ruleId":"76","severity":1,"message":"77","line":31,"column":8,"nodeType":"78","endLine":31,"endColumn":23,"suggestions":"79"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":16,"nodeType":"68","messageId":"72","endLine":1,"endColumn":25},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-redeclare","'uriGraphQL' is already defined.","Identifier","redeclared","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'next' is assigned a value but never used.","'Separator' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'go'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [data, go, loading]",{"range":"85","text":"86"},[918,933],"[data, go, loading]"]